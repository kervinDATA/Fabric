-- DW018 CONFX: Introduction & Setup

-- DW019
-- get our bronze tables that we need,one source system at a time
-- transform as per the target requirements


WITH lv_sessions AS (
SELECT 
	CONCAT('1', '_', [session_id]) AS master_session_id,
	1 as conference_id,
	session_name,
	CONCAT('1', '_', sch.[speaker_id]) AS master_speaker_id,
	speak.speaker_name,
	room.room_name AS stage_name,
	DATEDIFF(MINUTE, start_time, end_time) AS session_length,
	sch.[start_time] AS session_start_time,
	[session_date],
	sch.[last_modified_date]
FROM DW018_BronzeLH.dbo.lv_schedule sch 
JOIN DW018_BronzeLH.dbo.lv_rooms room
	ON sch.room_id = room.room_id
JOIN DW018_BronzeLH.dbo.lv_speakers speak
	ON sch.speaker_id = speak.speaker_id
),

stock_sess AS (
SELECT
	CONCAT('2', '_', [session_id]) AS master_session_id,
	2 as conference_id,
	session_name,
	CONCAT('2', '_', [speaker_id]) AS master_speaker_id,
	NULL AS speaker_name,
	stage_name,
	session_length,
	session_start_time,
	session_date,
	updated_timestamp AS last_modified_date
FROM DW018_BronzeLH.dbo.stock_sessions
),

union_two AS (
SELECT * FROM lv_sessions
UNION ALL
SELECT * FROM stock_sess
)

-- Save en table dans le schema dbo sous le nom sessions_conformed
SELECT * INTO dbo.sessions_conformed FROM union_two

select * from dbo.sessions_conformed




***********************************************************************

-- DW020

SELECT  
    ts.CRM_Customer_ID AS em_customer_id,
    o.conference_id,
    ts.offer_id,
    ts.tickets_purchased,
    total_transaction_cost = ts.tickets_purchased * o.office_price_per_ticket,
    o.office_price_per_ticket,
    ts.OrderDate AS order_date

INTO DW019_GreenWH.dbo.ticket_sales
FROM DW018_BronzeLH.dbo.em_ticket_sales ts 
JOIN DW018_BronzeLH.dbo.em_offers o
    ON ts.offer_id = o.offer_id
;


*************************************************************************************

-- DW21  CONFX: Date Table


WITH initial_dates AS (
SELECT DATEADD(DAY,value,CONVERT(DATE, '2023-01-01')) AS [date]
FROM GENERATE_SERIES(0,364,1)
)

SELECT 
     [date]
    , date_key = CAST(CONVERT(VARCHAR(8), [date], 112) AS INT)
    , day = DAY([date])
    , month = MONTH([date])
    , year = YEAR([date])
FROM initial_dates
;



CREATE PROCEDURE dbo.p_generate_date_dim 
@start_date VARCHAR(20),
@number_of_days INT
AS

DROP TABLE IF EXISTS dbo.date_dimension;

WITH initial_dates AS (
SELECT DATEADD(DAY,value,CONVERT(DATE, @start_date)) AS [date]
FROM GENERATE_SERIES(0,@number_of_days - 1, 1)
)

SELECT 
     [date]
    , date_key = CAST(CONVERT(VARCHAR(8), [date], 112) AS INT)
    , day = DAY([date])
    , month = MONTH([date])
    , year = YEAR([date])
INTO dbo.date_dimension
FROM initial_dates
;



EXEC dbo.p_generate_date_dim @start_date='2024-10-01', @number_of_days=5 ;


SELECT * FROM dbo.date_dimension;



*************************************************************************************

-- DW022  CONFX: Attendance Table

SELECT * FROM DW018_BronzeLH.dbo.lv_attendance_records ;
SELECT * FROM DW018_BronzeLH.dbo.lv_attendees_mapping ;
SELECT * FROM DW018_BronzeLH.dbo.stock_check_ins ;

----------------------------------------------------

WITH lv_attendance AS (
SELECT
      CONCAT('1', '_', value) AS master_session_id
    , amap.CRM_Customer_ID AS attendee_customer_id
    , NULL AS scan_timestamp
FROM DW018_BronzeLH.dbo.lv_attendance_records arec
JOIN DW018_BronzeLH.dbo.lv_attendees_mapping amap
    ON arec.attendee_id = amap.attendee_id
CROSS APPLY STRING_SPLIT(sessions_attended, ',')
),

stock_attendees AS (
SELECT
      master_session_id = CONCAT('2', '_', session_id)
    , attendee_customer_id = crm_user_id
    , scan_timestamp = tap_timestamp
FROM DW018_BronzeLH.dbo.stock_check_ins
),

att_together AS (
SELECT * FROM lv_attendance
UNION ALL
SELECT * FROM stock_attendees
)

SELECT 
    unique_attendance_log_id = ROW_NUMBER() OVER(ORDER BY ( select NULL)),
    master_session_id,
    attendee_customer_id,
    scan_timestamp
INTO dbo.attendance_logs_conformed 
FROM att_together



SELECT * FROM attendance_logs_conformed ORDER BY unique_attendance_log_id
































